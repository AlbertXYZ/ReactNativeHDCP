{
  "_args": [
    [
      {
        "raw": "react-native-video",
        "scope": null,
        "escapedName": "react-native-video",
        "name": "react-native-video",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/xuyanzhang/MyCode/react_native_coding"
    ]
  ],
  "_cnpm_publish_time": 1485868559271,
  "_from": "react-native-video",
  "_hasShrinkwrap": false,
  "_id": "react-native-video@1.0.0",
  "_location": "/react-native-video",
  "_nodeVersion": "6.0.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-native-video-1.0.0.tgz_1485868558655_0.6802749121561646"
  },
  "_npmUser": {
    "name": "apperson-labs",
    "email": "matt@appersonlabs.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-video",
    "scope": null,
    "escapedName": "react-native-video",
    "name": "react-native-video",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://r.cnpmjs.org/react-native-video/download/react-native-video-1.0.0.tgz",
  "_shasum": "ba92b9e1a114c2c1f3a6144b0639ca3f69a0cc74",
  "_shrinkwrap": null,
  "_spec": "react-native-video",
  "_where": "/Users/xuyanzhang/MyCode/react_native_coding",
  "author": {
    "name": "Brent Vatne",
    "email": "brentvatne@gmail.com",
    "url": "https://github.com/brentvatne"
  },
  "bugs": {
    "url": "https://github.com/brentvatne/react-native-video/issues"
  },
  "contributors": [
    {
      "name": "Johannes Lumpe",
      "email": "johannes@lum.pe"
    },
    {
      "name": "Baris Sencan",
      "email": "baris.sncn@gmail.com"
    }
  ],
  "dependencies": {
    "keymirror": "0.1.1"
  },
  "description": "A <Video /> element for react-native",
  "devDependencies": {
    "babel-eslint": "5.0.0-beta8",
    "eslint": "1.10.3",
    "eslint-config-airbnb": "4.0.0",
    "eslint-plugin-react": "3.16.1",
    "jest-cli": "0.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ba92b9e1a114c2c1f3a6144b0639ca3f69a0cc74",
    "size": 46149,
    "noattachment": false,
    "tarball": "http://r.cnpmjs.org/react-native-video/download/react-native-video-1.0.0.tgz"
  },
  "gitHead": "8b17671d74b6cc3fb1c89ee1d9cb1879be577754",
  "homepage": "https://github.com/brentvatne/react-native-video#readme",
  "license": "MIT",
  "main": "Video.js",
  "maintainers": [
    {
      "name": "apperson-labs",
      "email": "matt@appersonlabs.com"
    },
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "isair",
      "email": "baris.sncn@gmail.com"
    },
    {
      "name": "johanneslumpe",
      "email": "johannes@johanneslumpe.de"
    },
    {
      "name": "sjchmiela",
      "email": "sjchmiela@gmail.com"
    }
  ],
  "name": "react-native-video",
  "optionalDependencies": {},
  "publish_time": 1485868559271,
  "readme": "## react-native-video\n\nA `<Video>` component for react-native, as seen in\n[react-native-login](https://github.com/brentvatne/react-native-login)!\n\nRequires react-native >= 0.19.0\n\n### Add it to your project\n\nRun `npm i -S react-native-video`\n\n#### iOS\n\nRun `react-native link` to link the react-native-video library.\n\nIf you would like to allow other apps to play music over your video component, add:\n\n**AppDelegate.m**\n\n```objective-c\n#import <AVFoundation/AVFoundation.h>  // import\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n  ...\n  [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryAmbient error:nil];  // allow\n  ...\n}\n```\n\n#### Android\n\nRun `react-native link` to link the react-native-video library.\n\nOr if you have trouble, make the following additions to the given files manually:\n\n**android/settings.gradle**\n\n```\ninclude ':react-native-video'\nproject(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android')\n```\n\n**android/app/build.gradle**\n\n```\ndependencies {\n   ...\n   compile project(':react-native-video')\n}\n```\n\n**MainActivity.java**\n\nOn top, where imports are:\n\n```java\nimport com.brentvatne.react.ReactVideoPackage;\n```\n\nUnder `.addPackage(new MainReactPackage())`:\n\n```java\n.addPackage(new ReactVideoPackage())\n```\n\n### Note: In react-native >= 0.29.0 you have to edit `MainApplication.java`\n\n**MainApplication.java** (react-native >= 0.29.0)\n\nOn top, where imports are:\n\n```java\nimport com.brentvatne.react.ReactVideoPackage;\n```\n\nUnder `.addPackage(new MainReactPackage())`:\n\n```java\n.addPackage(new ReactVideoPackage())\n```\n\n#### Windows\n\nMake the following additions to the given files manually:\n\n**windows/myapp.sln**\n\nAdd the `ReactNativeVideo` project to your solution.\n\n1. Open the solution in Visual Studio 2015\n2. Right-click Solution icon in Solution Explorer > Add > Existing Project...\n3. Select `node_modules\\react-native-video\\windows\\ReactNativeVideo\\ReactNativeVideo.csproj`\n\n**windows/myapp/myapp.csproj**\n\nAdd a reference to `ReactNativeVideo` to your main application project. From Visual Studio 2015:\n\n1. Right-click main application project > Add > Reference...\n2. Check `ReactNativeVideo` from Solution Projects.\n\n**MainPage.cs**\n\nAdd the `ReactVideoPackage` class to your list of exported packages.\n```cs\nusing ReactNative;\nusing ReactNative.Modules.Core;\nusing ReactNative.Shell;\nusing ReactNativeVideo; // <-- Add this\nusing System.Collections.Generic;\n...\n\n        public override List<IReactPackage> Packages\n        {\n            get\n            {\n                return new List<IReactPackage>\n                {\n                    new MainReactPackage(),\n                    new ReactVideoPackage(), // <-- Add this\n                };\n            }\n        }\n\n...\n```\n\n## Usage\n\n```javascript\n// Within your render function, assuming you have a file called\n// \"background.mp4\" in your project. You can include multiple videos\n// on a single screen if you like.\n\n<Video source={{uri: \"background\"}}   // Can be a URL or a local file.\n       ref={(ref) => {\n         this.player = ref\n       }}                             // Store reference\n       rate={1.0}                     // 0 is paused, 1 is normal.\n       volume={1.0}                   // 0 is muted, 1 is normal.\n       muted={false}                  // Mutes the audio entirely.\n       paused={false}                 // Pauses playback entirely.\n       resizeMode=\"cover\"             // Fill the whole screen at aspect ratio.\n       repeat={true}                  // Repeat forever.\n       playInBackground={false}       // Audio continues to play when app entering background.\n       playWhenInactive={false}       // [iOS] Video continues to play when control or notification center are shown.\n       progressUpdateInterval={250.0} // [iOS] Interval to fire onProgress (default to ~250ms)\n       onLoadStart={this.loadStart}   // Callback when video starts to load\n       onLoad={this.setDuration}      // Callback when video loads\n       onProgress={this.setTime}      // Callback every ~250ms with currentTime\n       onEnd={this.onEnd}             // Callback when playback finishes\n       onError={this.videoError}      // Callback when video cannot be loaded\n       onBuffer={this.onBuffer} // Callback when remote video is buffering\n       style={styles.backgroundVideo} />\n\n// Later to trigger fullscreen\nthis.player.presentFullscreenPlayer()\n\n// To set video position in seconds (seek)\nthis.player.seek(0)\n\n// Later on in your styles..\nvar styles = StyleSheet.create({\n  backgroundVideo: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n});\n```\n\n\n## Android Expansion File Usage\n\n```javascript\n// Within your render function, assuming you have a file called\n// \"background.mp4\" in your expansion file. Just add your main and (if applicable) patch version\n<Video source={{uri: \"background\", mainVer: 1, patchVer: 0}} // Looks for .mp4 file (background.mp4) in the given expansion version.\n       rate={1.0}                   // 0 is paused, 1 is normal.\n       volume={1.0}                 // 0 is muted, 1 is normal.\n       muted={false}                // Mutes the audio entirely.\n       paused={false}               // Pauses playback entirely.\n       resizeMode=\"cover\"           // Fill the whole screen at aspect ratio.\n       repeat={true}                // Repeat forever.\n       onLoadStart={this.loadStart} // Callback when video starts to load\n       onLoad={this.setDuration}    // Callback when video loads\n       onProgress={this.setTime}    // Callback every ~250ms with currentTime\n       onEnd={this.onEnd}           // Callback when playback finishes\n       onError={this.videoError}    // Callback when video cannot be loaded\n       style={styles.backgroundVideo} />\n\n// Later on in your styles..\nvar styles = Stylesheet.create({\n  backgroundVideo: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n});\n```\n\n### Load files with the RN Asset System\n\nThe asset system [introduced in RN `0.14`](http://www.reactnative.com/react-native-v0-14-0-released/) allows loading image resources shared across iOS and Android without touching native code. As of RN `0.31` [the same is true](https://github.com/facebook/react-native/commit/91ff6868a554c4930fd5fda6ba8044dbd56c8374) of mp4 video assets for Android. As of [RN `0.33`](https://github.com/facebook/react-native/releases/tag/v0.33.0) iOS is also supported. Requires `react-native-video@0.9.0`.\n\n```\n<Video\n  repeat\n  resizeMode='cover'\n  source={require('../assets/video/turntable.mp4')}\n  style={styles.backgroundVideo}\n/>\n```\n\n### Play in background on iOS\n\nTo enable audio to play in background on iOS the audio session needs to be set to `AVAudioSessionCategoryPlayback`. See [Apple documentation][3] for additional details. (NOTE: there is now a ticket to [expose this as a prop]( https://github.com/react-native-community/react-native-video/issues/310) )\n\n## Static Methods\n\n`seek(seconds)`\n\nSeeks the video to the specified time (in seconds). Access using a ref to the component\n\n`presentFullscreenPlayer()`\n\nToggles a fullscreen player. Access using a ref to the component.\n\n## Examples\n\n- See an [Example integration][1] in `react-native-login` *note that this example uses an older version of this library, before we used `export default` -- if you use `require` you will need to do `require('react-native-video').default` as per instructions above.*\n- Try the included [VideoPlayer example][2] yourself:\n\n   ```sh\n   git clone git@github.com:react-native-community/react-native-video.git\n   cd react-native-video/example\n   npm install\n   open ios/VideoPlayer.xcodeproj\n\n   ```\n\n   Then `Cmd+R` to start the React Packager, build and run the project in the simulator.\n\n- [Lumpen Radio](https://github.com/jhabdas/lumpen-radio) contains another example integration using local files and full screen background video.\n\n## TODOS\n\n- [ ] Add support for captions\n- [ ] Add support for playing multiple videos in a sequence (will interfere with current `repeat` implementation)\n- [x] Callback to get buffering progress for remote videos\n- [ ] Bring API closer to HTML5 `<Video>` [reference](http://devdocs.io/html/element/video)\n\n[1]: https://github.com/brentvatne/react-native-login/blob/56c47a5d1e23781e86e19b27e10427fd6391f666/App/Screens/UserInfoScreen.js#L32-L35\n[2]: https://github.com/react-native-community/react-native-video/tree/master/example\n[3]: https://developer.apple.com/library/ios/qa/qa1668/_index.html\n\n---\n\n**MIT Licensed**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/brentvatne/react-native-video.git"
  },
  "scripts": {
    "test": "eslint *.js"
  },
  "version": "1.0.0"
}
